server:
  port: 8080

config:
  frontend_DomainName: "http://localhost:3003"
  profiles: prod
  admin_path: admin
  # token加密盐
  secret: 123456
  os_url: https://gitee.com/chuqicloud/soft-ware/raw/master/Cloud/os.json

MySQL:
  host: localhost
  port: 3306
  username: root
  password: 123456
  database: pve

spring:
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
  profiles:
    active: ${config.profiles}
  application:
    # 应用名称
    name: QimenIDC
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
    dispatch-options-request: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver  # 数据库驱动
    url: jdbc:mysql://${MySQL.host}:${MySQL.port}/${MySQL.database}?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8&rewriteBatchedStatements=true
    username: ${MySQL.username}
    password: ${MySQL.password}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      connection-timeout: 30000     # 等待连接池分配链接的最大时长（毫秒），超过这个时长还没有可用的连接则发生 SQLException，默认：30 秒
      maximum-pool-size: 60         # 最大连接数
      auto-commit: true             # 自动提交
      idle-timeout: 30000          # 连接超时的最大时长（毫秒），超时则被释放（retired），默认：10 分钟
      pool-name: "DB-Connection-Pool" # 连接池名称
      max-lifetime: 120000         # 连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认： 30 分钟(1800000)
      read-only: false # 从池获得的连接是否处于只读模式
      # 连接到数据库时等待的最长时间(秒)
      login-timeout: 5
      # 池中维护的最小空闲连接数
      minimum-idle: 10

mybatis-plus:
  global-config:
    banner: false
    enable-sql-runner: true

springfox:
  documentation:
    swagger-ui:
      enabled: true

#health: http://localhost:8081/actuator/health 监控检查
#info: http://localhost:8081/actuator/info 项目信息
#metrics: http://localhost:8081/actuator/metrics 监控指标
#prometheus: http://localhost:8081/actuator/prometheus prometheus监控指标
info:
  application:
    name: "QimenIDC Community Edition"
    description: "Open source, free, cloud-native multi-cloud management and hybrid cloud convergence system."
    version: "1.0.7"
    build:
      version: "1.0.7_5"

management:
  server: # 指定监听端口，不指定则与server端口一直
    port: 8081
  endpoints: # 启动所有监控点
    web:
      exposure:
        include: "*"

  endpoint:
    health:
      show-details: always # 显示详细信息
    prometheus: # prometheus监控指标
      enabled: true
    shutdown:
      enabled: true # 是否启用shutdown监控点
    metrics:
        enabled: true # 是否启用metrics监控点

  metrics:
    tags:
      application: ${info.application.name}
    export:
      prometheus:
        enabled: true

  info:
    env:
      enabled: true